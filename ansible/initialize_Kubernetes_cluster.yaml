---
- hosts: master
  become: yes

  tasks:

# kubeadm.conf is a configuration file that gives you more flexibility- and clarity
# especially when you need to customise multiple aspects of your cluster
    - name: Copy the kubeadm.conf to the master
      ansible.builtin.copy:
        src: kubeadm.conf
        dest: /etc/kubernetes/kubeadm.conf
        owner: root
        group: root
        mode: '0644'

# Create a new token
    - name: New token being created 
      ansible.builtin.shell: sudo kubeadm token create
      register: kubeadm_token_create_output

    - name: Extract token using sed
      ansible.builtin.shell: 
        cmd: echo '{{ kubeadm_token_create_output }}' | sed -n 's/.*"stdout": *"\([^"]*\)".*/\1/p'
      register: new_token_created
      changed_when: false

    - name: Show new_token_created
      ansible.builtin.debug:
        msg: "{{new_token_created}}"

# Set token as fact 
    - name: Set token as fact
      ansible.builtin.set_fact:
        token: new_token_created

# # Capture the output for later use
#     - name: Capture kubeadm init output
#       ansible.builtin.set_fact:
#         kubeadm_init_output: "{{ kubeadm_init.stdout }}"

    - name: Get Discovery Token CA Cert Hash
      ansible.builtin.shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | sha256sum | awk '{print $1}'"
      register: ca_cert_hash

# Set CA Cert as fact 
    - name: Set CA Cert  as fact
      ansible.builtin.set_fact:
        ca_cert: ca_cert_hash

# # Pull the full "kubeadm join .." line from the output and set it as a fact
#     - name: Extract kubeadm join command from the output
#       ansible.builtin.set_fact:
#         kubeadm_join_cmd: "{{ kubeadm_init_output | regex_search('kubeadm join .*', '\\n') | trim }}"

# # Make the kubeadm_join_cmd fact available to the worker hosts
#     - name: Pass join command to worker group
#       ansible.builtin.add_host:
#         name: "{{ item }}"
#         groups: workers
#         kubeadm_join_cmd: "{{ kubeadm_join_cmd }}"
#       loop: "{{ groups['workers'] }}"

# Get and print the master node IP address
- hosts: master
  vars:
    master_ip: "{{ ansible_default_ipv4.address }}"
    ca_cert: ca_cert
    token: token
  tasks:

    - name: Print the master node IP
      ansible.builtin.debug:
        msg: "The master node IP address is {{ master_ip }}"

    - name: Create a template of the kubeadm join command
      ansible.builtin.set_fact:
        join_command: "kubeadm join {{ master_ip }}:6443 --token {{ token }} --discovery-token-ca-cert-hash sha256:{{ ca_cert }}"

    - name: Share join_command with all hosts
      ansible.builtin.set_fact:
        worker_join_command: "{{ join_command }}"
      delegate_to: localhost
      run_once: true

- hosts: workers
  become: yes
  vars:
    master_node: "{{ groups['master'][0] }}"
    ca_cert: ca_cert
    token: token

  tasks:

    - name: Show the join command
      ansible.builtin.debug:
        msg: "{{ hostvars[master_node].worker_join_command }}"

    # - name: Join nodes to the kubernetes cluster
    - name: Join worker nodes to the cluster
      ansible.builtin.shell: "{{ hostvars[master_node].worker_join_command }}"